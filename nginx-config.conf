# /etc/nginx/sites-available/capital-choice-platform
# Improved and hardened nginx configuration

# Cache configuration
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=app_cache:10m max_size=100m inactive=60m use_temp_path=off;

# Upstream configuration for load balancing
upstream app_backend {
    least_conn;
    server localhost:3000;
    keepalive 64;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=static:10m rate=50r/s;

# Enhanced log format for better debugging
log_format detailed '$remote_addr - $remote_user [$time_local] '
                   '"$request" $status $body_bytes_sent '
                   '"$http_referer" "$http_user_agent" '
                   '$request_time $upstream_response_time';

# Redirect HTTP to HTTPS (uncomment when SSL is configured)
# server {
#     listen 80;
#     server_name your-domain.com;
#     return 301 https://$server_name$request_uri;
# }

server {
    listen 80;
    server_name _;  # Replace with your domain
    
    # SSL configuration (uncomment when SSL is configured)
    # listen 443 ssl http2;
    # ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    # ssl_prefer_server_ciphers on;
    # ssl_session_cache shared:SSL:10m;
    # ssl_session_timeout 10m;
    # ssl_stapling on;
    # ssl_stapling_verify on;
    # ssl_dhparam /etc/nginx/dhparam.pem;
    
    # Enhanced Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Permitted-Cross-Domain-Policies "none" always;
    add_header X-Download-Options "noopen" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # Improved Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.socket.io https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com data:; img-src 'self' data: https:; connect-src 'self' ws: wss:; object-src 'none'; base-uri 'self'; frame-ancestors 'none';" always;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml text/x-js text/x-cross-domain-policy application/x-font-ttf application/x-font-opentype application/vnd.ms-fontobject image/x-icon;
    gzip_disable "msie6";
    
    # Client body size for file uploads
    client_max_body_size 10M;
    client_body_buffer_size 128k;
    
    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    send_timeout 60s;
    
    # Root directory for static files
    root /opt/capital-choice-platform/public;
    index index.html;
    
    # Enhanced logging
    access_log /var/log/nginx/capital-choice-access.log detailed;
    error_log /var/log/nginx/capital-choice-error.log warn;
    
    # IMPORTANT: Socket.IO MUST come FIRST before any regex patterns
    # Socket.IO WebSocket and polling transport
    location /socket.io/ {
        proxy_pass http://app_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_buffering off;
        proxy_cache off;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        
        # Socket.IO specific
        proxy_set_header X-NginX-Proxy true;
        proxy_redirect off;
    }
    
    # API routes with rate limiting
    location /api/auth/ {
        limit_req zone=auth burst=3 nodelay;
        limit_req_status 429;
        
        proxy_pass http://app_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_cache_bypass $http_upgrade;
        
        # No caching for auth endpoints
        proxy_cache off;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }
    
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        limit_req_status 429;
        
        proxy_pass http://app_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_cache_bypass $http_upgrade;
        
        # Cache GET requests for a short time
        proxy_cache app_cache;
        proxy_cache_methods GET HEAD;
        proxy_cache_valid 200 5m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    # Enhanced file upload security
    location /uploads/ {
        # First, handle allowed file types with strict validation
        location ~ /uploads/[^/]+\.(jpg|jpeg|png|gif|pdf|doc|docx|xls|xlsx|txt|csv|zip)$ {
            client_max_body_size 5M;  # Specific limit for uploads
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-Frame-Options "DENY" always;
            expires 1d;
            access_log /var/log/nginx/uploads.log;
            
            # Prevent execution of any uploaded files
            location ~ \.(php|php3|php4|php5|phtml|pl|py|jsp|asp|sh|cgi|exe|dll)$ {
                deny all;
                return 403;
            }
        }
        
        # Deny everything else in uploads
        deny all;
        return 403;
    }
    
    # Static assets with enhanced caching and rate limiting
    location ~* \.(jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot|map)$ {
        expires 30d;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        limit_req zone=static burst=50 nodelay;
        access_log off;
        
        # Security headers for static assets
        add_header X-Content-Type-Options "nosniff" always;
    }
    
    # CSS files with moderate caching
    location ~* \.css$ {
        expires 7d;
        add_header Cache-Control "public, must-revalidate";
        add_header Vary "Accept-Encoding";
        limit_req zone=static burst=30 nodelay;
        access_log off;
    }
    
    # JavaScript files with moderate caching
    location ~* \.js$ {
        expires 7d;
        add_header Cache-Control "public, must-revalidate";
        add_header Vary "Accept-Encoding";
        limit_req zone=static burst=30 nodelay;
        access_log off;
    }
    
    # Main application - serve static files and fall back to index.html
    location / {
        limit_req zone=general burst=10 nodelay;
        limit_req_status 429;
        
        try_files $uri $uri/ /index.html;
        
        # HTML files should not be cached aggressively
        location ~* \.html$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
            add_header Vary "Accept-Encoding";
        }
    }
    
    # Favicon and robots.txt
    location = /favicon.ico {
        log_not_found off;
        access_log off;
        expires 30d;
        add_header Cache-Control "public, immutable";
    }
    
    location = /robots.txt {
        log_not_found off;
        access_log off;
        expires 7d;
        add_header Cache-Control "public, must-revalidate";
    }
    
    # Security: Deny access to hidden files (except .well-known for Let's Encrypt)
    location ~ /\.(?!well-known) {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }
    
    # Security: Deny access to sensitive files
    location ~* \.(log|conf|sql|bak|backup|swp|save|old|tmp|temp)$ {
        deny all;
        return 404;
    }
    
    # Block common attack patterns and malicious requests
    location ~* (eval\(|base64_|shell_|exec\(|php_|\.\.\/|\.\.\\|index\.php|union.*select|insert.*into|drop.*table) {
        deny all;
        return 403;
    }
    
    # Block requests with suspicious user agents
    if ($http_user_agent ~* (bot|spider|crawler|scanner|grabber|scraper)) {
        return 403;
    }
    
    # Block requests with no user agent
    if ($http_user_agent = "") {
        return 403;
    }
    
    # Enhanced error pages
    error_page 404 /404.html;
    error_page 429 /429.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /opt/capital-choice-platform/public;
        internal;
        add_header Cache-Control "no-cache" always;
    }
    
    location = /429.html {
        root /opt/capital-choice-platform/public;
        internal;
        add_header Cache-Control "no-cache" always;
        add_header Retry-After "60" always;
    }
    
    location = /50x.html {
        root /opt/capital-choice-platform/public;
        internal;
        add_header Cache-Control "no-cache" always;
    }
}